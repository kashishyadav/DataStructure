import java.util.*;
import java.io.*;

class Node {
    
    int data;
    Node next;
    Node(int data) {
        this.data = data;
        next = null;
      
    }
}

class Solution {

/* you only have to complete the function given below.  
Node is defined as  

class Node {
    int data;
    Node left;
    Node right;
}

*/
     public static Node removeDuplicate(Node head)
     {
         if(head==null)
          return null;
         else if(head.next==null)
         return head;
         
         HashSet<Integer> hs=new HashSet<>();
         Node p=head;
         Node q=null;
         while(p!=null)
         {
             int value=p.data;
             if(hs.contains(value))
             {
                 q.next=p.next;
             }
             else{
                 hs.add(value);
                 q=p;
             }
             p=p.next;
         }
         return head;
     }

    public static void printLinkedList(Node root) {
        if(root==null)
         return;
        while(root!=null)
       {
           System.out.print(root.data+" ");
           root=root.next;
    }
       
    }

	public static Node insert(Node root, int data) {
        if(root == null) {
            System.out.println("base condition");
            return new Node(data);
        } else {
            Node temp=root;
            Node n=new Node(data);
               while(temp.next!=null)
               {
                   temp=temp.next;
               }
               temp.next=n;
            }
            return root;
        }
    

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int t = scan.nextInt();
        Node root = null;
        while(t-- > 0) {
        System.out.println("insertion call-----------------------");
            int data = scan.nextInt();
            root = insert(root, data);
        }
        scan.close();
        root=removeDuplicate(root);
        printLinkedList(root);
    }	
}
